<?xml version="1.0" encoding="UTF-8"?>
<study name="rtsz">
  <option name="subjectsDir"> /home/rt/rtsz/subjects</option>
  <option name="confDir"> xml</option>
  <subject>
    <option name="name"> R61rtsz001 </option>
  </subject>
  <option name="softwareDir"> /home/rt/murfi2/ </option>
</study>

<scanner>
  <option name="disabled">     false </option>
  <option name="tr">             1.2 </option>
  <option name="measurements">   167 </option>
  <option name="port">           15000 </option>
  <option name="saveImages">     true </option>
  <option name="receiveImages">  true </option>
  <option name="onlyReadMoCo">  false </option>
</scanner>

<infoserver>
  <option name="disabled"> false </option>
  <option name="port"> 15001 </option>
</infoserver>

<!-- processing steps (every TR)-->
<processor>
  <!-- creats a mosaic for the GUI -->
  <module name="mosaic">
    <option name="disabled"> false </option>
    <output>display</output>
    <output>log</output>
  </module>

  <module name="mask-gen">
    <option name="disabled"> false </option>
    <option name="makeavail">true</option>

    <!-- the roi name this mask can be referenced by in later modules
         and the data store -->
    <option name="roiID"> brain </option>

    <!-- threshold at a proportion of the mean image intensity -->
    <!-- voxel intesity / mean intensity -->
    <option name="threshold"> 0.5 </option>

    <!-- whether to use FSL's brain extraction tool (bet) to find the mask -->
    <option name="useBet"> false </option>

    <!-- command line paramters to use for bet -->
    <option name="betParms">-f 0.5 -g 0 -n -m</option>

    <!-- whether to update the mask with each incoming image or to
         keep constant over the run -->
    <!-- every TR or first TR -->
    <option name="dynamic"> false </option>

    <!-- whether to save the mask to a file (good idea) -->
    <option name="save"> true </option>
  </module>

  <!-- roi mask loading -->

  <!-- stg -->
  <module name="mask-load">
    <option name="disabled"> false </option>

    <option name="makeavail">true</option>

    <!-- the roi name this mask can be referenced by in later
         modules and the data store -->
    <option name="roiID"> stg </option>

    <!-- filename to load the mask from relative to subject mask directory
         (if present, overrides generation parms below) -->
    <option name="filename"> stg </option>

    <!-- whether to align the mask to the series reference after
         reading it in -->
    <option name="align"> true </option>

    <!-- whether to save the mask to a file (good idea) -->
    <option name="save"> true </option>
  </module>

  <!-- non -->
  <module name="mask-load">
    <option name="disabled"> false </option>

    <option name="makeavail">true</option>

    <!-- the roi name this mask can be referenced by in later
         modules and the data store -->
    <option name="roiID"> non </option>

    <!-- filename to load the mask from relative to subject mask directory
         (if present, overrides generation parms below) -->
    <option name="filename"> non </option>

    <!-- whether to align the mask to the series reference after
         reading it in -->
    <option name="align"> true </option>

    <!-- whether to save the mask to a file (good idea) -->
    <option name="save"> true </option>
  </module>-->

  <!-- deviation of voxel intensity from expected value  -->
  <module name="incremental-glm">
    <option name="disabled"> false </option>

    <option name="makeavail">true</option>
    <output>display</output>

    <option name="maskRoiID">brain</option>

	<!-- design matrix -->
    <design>
      <option name="disabled"> false </option>

     <!-- parameters specifying neural conditions of interest -->

      <!-- **STUDY SPECIFIC**  each condition should have its own vector of "on" trs as 1s
           and the rest 0s. if there is a cyclic block pattern then
           only one cycle's worth needs to be specified, the program
           will repeat that pattern until the end of the scan. -->
      <option name="condition" conditionName="Self">
        0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      </option>

      <option name="condition" conditionName="Other">
        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
        0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      </option>

      <!-- 30-second baseline -->
      <!--<option name="conditionShift">25</option>-->
      <option name="conditionShift">25</option>
    </design>
  </module>

  <!-- compute moment to moment neural activation -->
  <module name="current-activation">

    <option name="disabled"> false </option>
    <option name="makeavail">true</option>
    <option name="print"> true </option>

    <option name="modelFitModuleID"> incremental-glm </option>
    <option name="modelFitRoiID"> brain </option>
    <option name="maskRoiID"> brain </option>

   <!--<option name="numDataPointsForErrEst"> 25 </option>-->
   <option name="numDataPointsForErrEst"> 25 </option>
  </module>

  <!-- compute feedback -->
  <module name="roi-combine">
    <output> infoserver </output>
    <output>display</output>

    <option name="disabled"> false </option>
    <option name="print"> true </option>

    <option name="makeavail">true</option>

    <option name="method"> weighted-ave </option>

    <option name="maskRoiID"> stg </option>

    <option name="inputModuleID"> current-activation </option>
    <option name="inputDataName"> activation-img </option>
    <option name="inputRoiID"> brain </option>

    <option name="weightModuleID"> incremental-glm </option>
    <option name="weightDataName"> residual_mse-img </option>
  </module>

  <module name="roi-combine">
    <output> infoserver </output>
    <output>display</output>

    <option name="disabled"> false </option>
    <option name="print"> true </option>

    <option name="makeavail">true</option>

    <option name="method"> weighted-ave </option>

    <option name="maskRoiID"> non </option>

    <option name="inputModuleID"> current-activation </option>
    <option name="inputDataName"> activation-img </option>
    <option name="inputRoiID"> brain </option>

    <option name="weightModuleID"> incremental-glm </option>
    <option name="weightDataName"> residual_mse-img </option>
  </module>

</processor>
